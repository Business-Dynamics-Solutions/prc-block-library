import*as t from"@wordpress/interactivity";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const n=(i={getContext:()=>t.getContext,getElement:()=>t.getElement,store:()=>t.store,withSyncEvent:()=>t.withSyncEvent},o={},e.d(o,i),o);var i,o;const{actions:s,state:a}=(0,n.store)("prc-block/form-input-password",{state:{get id(){return(0,n.getContext)()?.id||!1},get value(){const{id:t}=a;return a[t]?.value||""},get inputName(){const{attributes:t}=(0,n.getElement)(),{id:e}=t,{formFields:i}=a;return i.find((t=>t.id===e))?.name},get inputPlaceholder(){const{attributes:t}=(0,n.getElement)(),{id:e}=t,{formFields:i}=a;return i.find((t=>t.id===e))?.placeholder},get isInputHidden(){const{attributes:t}=(0,n.getElement)(),{id:e}=t,{formFields:i}=a;return i.find((t=>t.id===e))?.hidden},get isInputDisabled(){const{attributes:t}=(0,n.getElement)(),{id:e}=t,{formFields:i}=a;return i.find((t=>t.id===e))?.disabled},get isInputReadOnly(){const{attributes:t}=(0,n.getElement)(),{id:e}=t,{formFields:i}=a;return i.find((t=>t.id===e))?.readOnly},get isInputRequired(){const{attributes:t}=(0,n.getElement)(),{id:e}=t,{formFields:i}=a;return i.find((t=>t.id===e))?.required},get hasConfirmation(){const{id:t}=a;return a[t]?.hasConfirmation||!1},get confirmationInputId(){const{id:t}=a;return a[t]?.confirmationInputId||""},get confirmationValue(){const{id:t}=a;return a[t]?.confirmationValue||""},get passwordsMatch(){const{id:t}=a;return a[t]?.passwordsMatch||!1},get allConditionsMet(){const{id:t}=a;return a[t].conditionsList.every((t=>t.met))}},actions:{onInputChange:(0,n.withSyncEvent)((t=>{const{ref:e}=(0,n.getElement)(),{id:i,name:o}=e,s=t.target?.value,r=a.id;a[r].value=s,"confirmPassword"===o?a[r].confirmationValue=s:a[r].value=s})),onLabelClick:(0,n.withSyncEvent)((t=>{const e=t.target.nextElementSibling;e&&["INPUT"].includes(e.tagName)&&e.focus()}))},callbacks:{onConfirmationInit:()=>{const{id:t,formFields:e}=a,n=t,i=e.find((t=>"confirmPassword"===t.name))?.id||!1,o=e.findIndex((t=>"confirmPassword"===t.name));i&&(a[n].confirmationInputId=i,a.formFields[o].isDisabled=!0)},onPasswordAnalyzer:()=>{const{id:t}=(0,n.getContext)(),{value:e,confirmationValue:i,confirmationInputId:o,formFields:s}=a,r=a.id;if(null===o||""===o)return;if(""===e)return;const d={hasLowerCase:/[a-z]/.test(c=e),hasUpperCase:/[A-Z]/.test(c),hasNumber:/\d/.test(c),hasSpecialCharacter:/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(c),hasLength:c.length>=12,hasNoInvalidCharacters:/^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*$/.test(c)};var c;const l=Object.values(d).every((t=>!0===t)),u=s.findIndex((t=>"confirmPassword"===t.name));a.formFields[u].isDisabled=!l;const m=[];Object.keys(d).forEach((t=>{const e=a[r].conditionsList.findIndex((e=>e.id===t)),n=a[r].conditionsList[e];n.met=d[t],m[e]=n}));const f=i===e;a[r].passwordsMatch=f;const g=a[r].conditionsList.findIndex((t=>"hasMatch"===t.id)),h=a[r].conditionsList[g];h.met=f,m[g]=h,a[r].conditionsList=m},*onValueChange(){const{targetNamespace:t,id:e}=(0,n.getContext)(),{value:i,hasConfirmation:o,passwordsMatch:s,allConditionsMet:r}=a;if(i){const{actions:s}=yield(0,n.store)(t);s.onInputChange&&(o&&r?s.onInputChange({target:{value:i,id:e}}):o||s.onInputChange({target:{value:i,id:e}}))}}}});
//# sourceMappingURL=view.js.map