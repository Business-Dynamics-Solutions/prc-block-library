import*as e from"@wordpress/interactivity";var t={438:e=>{e.exports=import("@wordpress/interactivity-router")}},o={};function r(e){var n=o[e];if(void 0!==n)return n.exports;var a=o[e]={exports:{}};return t[e](a,a.exports,r),a.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const n=(l={getElement:()=>e.getElement,getServerState:()=>e.getServerState,store:()=>e.store},c={},r.d(c,l),c),{state:a,actions:i}=(0,n.store)("prc-block/render-to-region",{state:{get myValueFromServer(){const{myValue:e}=(0,n.getServerState)();return e}},actions:{updateValue:e=>{a.myValue=e},updateClientValueWithServerValue:()=>{const e=(0,n.getServerState)(),{myValue:t}=e;a.myValue=t},*doNavigateAction(e){const t=yield Promise.resolve().then(r.bind(r,438));yield t.actions.navigate(e),i.updateClientValueWithServerValue()}},callbacks:{onMount:()=>{const e=(0,n.getElement)(),t=e.getAttribute("data-prc-block--render-to-region--name");console.log("onMount",e,t,a)},onUpdate:()=>{const e=(0,n.getElement)(),t=e.getAttribute("data-prc-block--render-to-region--name");console.log("onUpdate",e,t,a)},onRegionMount:()=>{const e=(0,n.getElement)(),t=e.getAttribute("data-prc-block--render-to-region--name");console.log("onRegionMount",e,t,a)},onRegionUpdate:()=>{const e=(0,n.getElement)(),t=e.getAttribute("data-prc-block--render-to-region--name");console.log("onRegionUpdate",e,t,a)}}});var l,c;
//# sourceMappingURL=view.js.map