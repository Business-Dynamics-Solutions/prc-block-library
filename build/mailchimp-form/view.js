import*as e from"@wordpress/interactivity";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const n=(o={getContext:()=>e.getContext,getElement:()=>e.getElement,store:()=>e.store},r={},t.d(r,o),r);var o,r;const{state:s,actions:i}=(0,n.store)("prc-block/mailchimp-form",{actions:{onInputChange:e=>{const{value:t}=e.target,o=(0,n.getContext)(),{ref:r}=(0,n.getElement)(),{id:i}=r;s[i].value=t,o.emailAddress=s[i].value},onButtonClick:e=>{const t=(0,n.getContext)(),{ref:o}=(0,n.getElement)(),{id:r}=o;t.captchaHidden=!1},onCheckboxMouseEnter:()=>{},onButtonMouseEnter:()=>{},reset:e=>{const{buttonId:t,inputId:n}=e;s[n].isError=!1,s[n].isSuccess=!1,s[n].value="",s[t].isError=!1,s[t].isSuccess=!1,s[t].text=s[t].originalText,e.captchaToken=!1,e.isError=null,e.isSuccess=null,e.messages=[]},clearMessages:()=>{const e=(0,n.getContext)();i.reset(e)}},callbacks:{onInit:()=>{const{ref:e}=(0,n.getElement)(),t=(0,n.getContext)(),o=e.querySelector("input.wp-block-prc-block-form-input-text");o?.id&&(t.inputId=o?.id);const r=e.querySelector(".wp-element-button");r?.id&&(t.buttonId=r?.id)},onKeyDown:e=>{const{ref:t}=(0,n.getElement)(),o=t.querySelector("input.wp-block-prc-block-form-input-text");if(document.activeElement!==o)return;const r=(0,n.getContext)();"Enter"===e.key&&i.onButtonClick(),"Escape"===e.key&&(s[r.inputId].value="")},onInputChange:()=>{const e=(0,n.getContext)(),{emailAddress:t,buttonId:o}=e;t&&t.includes("@")?s[o].isDisabled=!1:s[o].isDisabled=!0},onCaptchaDisplayHideFormElements:()=>{const e=(0,n.getContext)(),{captchaHidden:t,inputId:o,buttonId:r}=e;!1===t&&(s[o].isHidden=!0,s[r].isHidden=!0),!0===t&&(s[o].isHidden=!1,s[r].isHidden=!1)},onCaptchaVerifyHideCaptcha:()=>{const e=(0,n.getContext)();!1!==e.captchaToken&&(e.captchaHidden=!0)},onCaptchaVerifyThenSubscribe:()=>{const e=(0,n.getContext)(),{captchaToken:t,inputId:o,buttonId:r,emailAddress:c,interest:a,NONCE:u}=e;!1!==t&&(s[r].text="Subscribing...",function({emailAddress:e,captchaToken:t=!1,interest:n=!1,NONCE:o=!1}){const{apiFetch:r}=window.wp,{isURL:s,buildQueryString:i}=window.wp.url;if(!t)return new Error("We couldn't verify you're not a robot ðŸ¤–. Please try again.");const c=e,a=document.URL;if(!s(a))return new Error("Invalid url",a);const u=i({email:c,captcha_token:t,interests:n,api_key:"mailchimp-form",origin_url:a});return new Promise(((e,t)=>{r.use(r.createNonceMiddleware(o)),r({path:`/prc-api/v3/mailchimp/subscribe/?${u}`,method:"POST"}).then((n=>{n.success?e(n):t(n)})).catch((e=>{t(e)}))}))}({emailAddress:c,interest:a,captchaToken:t,NONCE:u}).then((t=>{e.isSuccess=!0,setTimeout((()=>{i.reset(e)}),1e4)})).catch((t=>{console.error("ERROR",e,t),e.isError=!0,e.messages=[{id:"error",text:t.message}],setTimeout((()=>{i.reset(e)}),1e4)})))},onSuccess:()=>{const e=(0,n.getContext)(),{isSuccess:t,buttonId:o,inputId:r}=e;null!==t&&(s[r].isSuccess=t,s[o].isSuccess=t,!0===t&&(s[o].text="Success"))},onError:()=>{const e=(0,n.getContext)(),{isError:t,buttonId:o,inputId:r}=e;null!==t&&!0===t?(s[r].isError=!0,s[o].isError=!0,s[o].text="Error"):null!==t&&!1===t&&i.reset(e)}}});
//# sourceMappingURL=view.js.map