{"version":3,"file":"taxonomy-search/view.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICIlF,MAAM,GAJGI,EAI8B,CAAE,WAAgB,IAAOC,EAAwE,WAAG,WAAgB,IAAOA,EAAwE,WAAG,MAAW,IAAOA,EAAmE,MAAG,UAAe,IAAOA,EAAuE,UAAG,SAAc,IAAOA,EAAsE,UAH3fC,EAAI,CAAC,EAAGhB,EAAoBiB,EAAED,EAAGF,GAAWE,ICU3C,SAAEE,GAAaC,OAAOC,IACtB,aAAEC,GAAiBF,OAAOC,GAAGE,KAC7B,eAAEC,GAAmBJ,OAAOC,GAAGI,cAuB/B,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OAAM,4BAA6B,CAC7DD,QAAS,CACRE,SAAcC,MAACC,EAAaC,EAAUC,EAAe,IAC7C,IAAIC,SAASC,IACnB,MAAMC,EAAO,CAAEC,SAAU,IACrB,KAAOL,IACVI,EAAKJ,SAAWA,GAEb,KAAOD,IACVK,EAAKE,OAASP,GAEX,IAAME,GAAgB,KAAOA,IAEhCG,EAAKG,eAAiBN,GAEvB,MAAMO,EAAU,CACfC,OAAQ,MACRC,KAAMpB,EACL,qCACAc,IAGFjB,EAASqB,GAASG,MAAMzB,IACvB,MAAM0B,EAAU1B,EAAE2B,KAAKC,IAAC,CACvB1C,IAAK0C,EAAEC,GACPA,GAAID,EAAEC,GACNxB,IAAKuB,EAAEE,KACPC,YAAazB,EAAesB,EAAEG,aAC9BC,MAAO1B,EAAesB,EAAEK,UAEzBhB,EAAQS,EAAQ,GACf,IAGJQ,aAAeC,KACEC,EAAAA,EAAAA,cACRC,UAAW,CAAI,EAExBC,YAAcH,IACb,MAAMI,GAAUH,EAAAA,EAAAA,cAChBI,YAAW,KACVD,EAAQF,UAAW,CAAK,GACtB,IAAI,EAERI,cAAgBN,IACf,MAAM,MAAEO,GAAUP,EAAMQ,OAClBJ,GAAUH,EAAAA,EAAAA,eACV,IAAEQ,IAAQC,EAAAA,EAAAA,eACV,GAAEhB,GAAOe,EAEfpC,EAAMqB,GAAIa,MAAQA,EAElBH,EAAQ1B,YAAcL,EAAMqB,GAAIa,KAAK,GAGvCI,UAAW,CACVC,YAAaA,KACZ,MAAMR,GAAUH,EAAAA,EAAAA,cAChB,OACCG,EAAQS,SACRT,EAAQS,QAAQC,QAAU,GAC1BV,EAAQF,QAAQ,EAGlBa,oBAAqBA,KACpB,MAAMX,GAAUH,EAAAA,EAAAA,eACV,qBAAEe,GAAyBZ,EAC7BY,GACH1C,EACEG,SAASuC,EAAsBZ,EAAQzB,UACvCW,MAAMzB,IACNuC,EAAQS,QAAUhD,CAAC,GAEtB,EAEDoD,0BAA2BA,KAC1B,MAAMb,GAAUH,EAAAA,EAAAA,cACVe,EAlGWE,CAACX,IAEpB,MAAOY,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASd,GAgBrD,OAfAe,EAAAA,EAAAA,YACC,KAEC,MAAMC,EAAUlB,YAAW,KAC1Be,EAAkBb,EAAM,GA2FqC,KAtF9D,MAAO,KACNiB,aAAaD,EAAQ,CACrB,GAEF,CAAChB,EAkF8D,MAhFzDY,CAAc,EAgFUD,CAAYd,EAAQ1B,aAC7CsC,EAAqBF,OAAS,IACjCV,EAAQY,qBAAuBA,EAChC,EAEDS,SAAWzB,IACN,KAAOA,EAAM0B,WACAzB,EAAAA,EAAAA,cACRC,UAAW,EACpB,KD1HK,IAACxC,EACJE","sources":["webpack://@pewresearch/prc-block-library/webpack/bootstrap","webpack://@pewresearch/prc-block-library/webpack/runtime/define property getters","webpack://@pewresearch/prc-block-library/webpack/runtime/hasOwnProperty shorthand","webpack://@pewresearch/prc-block-library/external module \"@wordpress/interactivity\"","webpack://@pewresearch/prc-block-library/./src/taxonomy-search/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store), [\"useEffect\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.useEffect), [\"useState\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.useState) });","/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\tgetElement,\n\tuseState,\n\tuseEffect,\n} from '@wordpress/interactivity';\n\nconst { apiFetch } = window.wp;\nconst { addQueryArgs } = window.wp.url;\nconst { decodeEntities } = window.wp.htmlEntities;\n\nconst useDebounce = (value, delay) => {\n\t// State and setters for debounced value\n\tconst [debouncedValue, setDebouncedValue] = useState(value);\n\tuseEffect(\n\t\t() => {\n\t\t\t// Update debounced value after delay\n\t\t\tconst handler = setTimeout(() => {\n\t\t\t\tsetDebouncedValue(value);\n\t\t\t}, delay);\n\t\t\t// Cancel the timeout if value changes (also on delay change or unmount)\n\t\t\t// This is how we prevent debounced value from updating if value is changed ...\n\t\t\t// .. within the delay period. Timeout gets cleared and restarted.\n\t\t\treturn () => {\n\t\t\t\tclearTimeout(handler);\n\t\t\t};\n\t\t},\n\t\t[value, delay] // Only re-call effect if value or delay changes\n\t);\n\treturn debouncedValue;\n};\n\nconst { state, actions } = store('prc-block/taxonomy-search', {\n\tactions: {\n\t\tasync doSearch(searchValue, taxonomy, parentTermId = 0) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tconst args = { per_page: 25 };\n\t\t\t\tif ('' !== taxonomy) {\n\t\t\t\t\targs.taxonomy = taxonomy;\n\t\t\t\t}\n\t\t\t\tif ('' !== searchValue) {\n\t\t\t\t\targs.search = searchValue;\n\t\t\t\t}\n\t\t\t\tif (0 !== parentTermId && '' !== parentTermId) {\n\t\t\t\t\t// cast parentTermId as a whole number\n\t\t\t\t\targs.parent_term_id = parentTermId;\n\t\t\t\t}\n\t\t\t\tconst request = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tpath: addQueryArgs(\n\t\t\t\t\t\t'/prc-api/v3/blocks/taxonomy-search',\n\t\t\t\t\t\targs\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t\tapiFetch(request).then((d) => {\n\t\t\t\t\tconst tmpData = d.map((t) => ({\n\t\t\t\t\t\tkey: t.id,\n\t\t\t\t\t\tid: t.id,\n\t\t\t\t\t\turl: t.link,\n\t\t\t\t\t\tdescription: decodeEntities(t.description),\n\t\t\t\t\t\tlabel: decodeEntities(t.name),\n\t\t\t\t\t}));\n\t\t\t\t\tresolve(tmpData);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tonInputFocus: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.isActive = true;\n\t\t},\n\t\tonInputBlur: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tsetTimeout(() => {\n\t\t\t\tcontext.isActive = false;\n\t\t\t}, 300);\n\t\t},\n\t\tonInputChange: (event) => {\n\t\t\tconst { value } = event.target;\n\t\t\tconst context = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tconst { id } = ref;\n\t\t\t// Store the value in the global state where we store all primitve inputs.\n\t\t\tstate[id].value = value;\n\t\t\t// Also, store the value in this block's context so we can use it in the submitHandler.\n\t\t\tcontext.searchValue = state[id].value;\n\t\t},\n\t},\n\tcallbacks: {\n\t\tshowResults: () => {\n\t\t\tconst context = getContext();\n\t\t\treturn (\n\t\t\t\tcontext.results &&\n\t\t\t\tcontext.results.length >= 1 &&\n\t\t\t\tcontext.isActive\n\t\t\t);\n\t\t},\n\t\tonSearchValueChange: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { debouncedSearchValue } = context;\n\t\t\tif (debouncedSearchValue) {\n\t\t\t\tactions\n\t\t\t\t\t.doSearch(debouncedSearchValue, context.taxonomy)\n\t\t\t\t\t.then((d) => {\n\t\t\t\t\t\tcontext.results = d;\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdebounceSearchValueChange: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst debouncedSearchValue = useDebounce(context.searchValue, 1000);\n\t\t\tif (debouncedSearchValue.length > 2) {\n\t\t\t\tcontext.debouncedSearchValue = debouncedSearchValue;\n\t\t\t}\n\t\t},\n\t\tonEscKey: (event) => {\n\t\t\tif (27 === event.keyCode) {\n\t\t\t\tconst context = getContext();\n\t\t\t\tcontext.isActive = false;\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","apiFetch","window","wp","addQueryArgs","url","decodeEntities","htmlEntities","state","actions","store","async","doSearch","searchValue","taxonomy","parentTermId","Promise","resolve","args","per_page","search","parent_term_id","request","method","path","then","tmpData","map","t","id","link","description","label","name","onInputFocus","event","getContext","isActive","onInputBlur","context","setTimeout","onInputChange","value","target","ref","getElement","callbacks","showResults","results","length","onSearchValueChange","debouncedSearchValue","debounceSearchValueChange","useDebounce","debouncedValue","setDebouncedValue","useState","useEffect","handler","clearTimeout","onEscKey","keyCode"],"sourceRoot":""}