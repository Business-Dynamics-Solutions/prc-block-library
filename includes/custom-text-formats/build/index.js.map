{"version":3,"file":"index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAY,SCAtD,EAA+BA,OAAW,GAAe,YCqF/C,CAvEI,CACnBC,KAAM,mCACNC,OAAOC,EAAAA,EAAAA,IAAG,qBACVC,QAAS,OACTC,UAAW,6BACXC,WAAY,KACZC,KAAOC,IACN,MAAM,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAaH,EActC,OACCI,EAAAA,EAAAA,eAACC,EAAAA,sBAAqB,CACrBX,OAAOC,EAAAA,EAAAA,IAAG,qBACVW,QAhBeC,KAGhBL,GACCM,EAAAA,EAAAA,cAAaP,EAAO,CACnBQ,KAAM,mCACNZ,UAAWM,EACR,wBACA,+BAEJ,EAOAA,SAAUA,GACT,GAKa,CACjBV,KAAM,gCACNC,OAAOC,EAAAA,EAAAA,IAAG,aACVC,QAAS,OACTc,KAAM,mBACNb,UAAW,KACXC,WAAY,CACXa,MAAO,SAERZ,KAAOC,IACN,MAAM,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAaH,EAChCO,EAAWA,KAChBL,GACCM,EAAAA,EAAAA,cAAaP,EAAO,CACnBQ,KAAM,gCACNX,WAAY,CACXa,MAAO,iCAGT,EAGF,OACCP,EAAAA,EAAAA,eAACQ,EAAAA,SAAQ,MACRR,EAAAA,EAAAA,eAACS,EAAAA,iBAAgB,CAChBJ,KAAK,UACLK,UAAU,IACVC,MAAOR,KAERH,EAAAA,EAAAA,eAACC,EAAAA,sBAAqB,CACrBK,KAAK,mBACLhB,OAAOC,EAAAA,EAAAA,IAAG,aACVW,QAASC,EACTJ,SAAUA,IAED,IAONa,SAASC,KAChBC,EAAAA,EAAAA,oBAAmBD,EAAOxB,KAAM,IAC5BwB,GACF,G","sources":["webpack://prc-block-library-custom-text-formats/external window \"React\"","webpack://prc-block-library-custom-text-formats/external window [\"wp\",\"i18n\"]","webpack://prc-block-library-custom-text-formats/external window [\"wp\",\"element\"]","webpack://prc-block-library-custom-text-formats/external window [\"wp\",\"richText\"]","webpack://prc-block-library-custom-text-formats/external window [\"wp\",\"blockEditor\"]","webpack://prc-block-library-custom-text-formats/./src/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"richText\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { toggleFormat, registerFormatType } from '@wordpress/rich-text';\nimport {\n\tRichTextToolbarButton,\n\tRichTextShortcut,\n} from '@wordpress/block-editor';\n\n// import { Icon } from '@prc/icons';\n\nconst reverseFont = {\n\tname: 'custom-text-formats/toggle-serif',\n\ttitle: __('Toggle Serif Font'),\n\ttagName: 'span',\n\tclassName: 'has-sans-serif-font-family',\n\tattributes: null,\n\tedit: (params) => {\n\t\tconst { value, onChange, isActive } = params;\n\t\tconst onToggle = () => {\n\t\t\t// if has class 'has-sans-serif-font-family' remove it and add 'has-serif-font-family'\n\t\t\t// if has class 'has-serif-font-family' remove it and add 'has-sans-serif-font-family'\n\t\t\tonChange(\n\t\t\t\ttoggleFormat(value, {\n\t\t\t\t\ttype: 'custom-text-formats/toggle-serif',\n\t\t\t\t\tclassName: isActive\n\t\t\t\t\t\t? 'has-serif-font-family'\n\t\t\t\t\t\t: 'has-sans-serif-font-family',\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<RichTextToolbarButton\n\t\t\t\ttitle={__('Toggle Serif Font')}\n\t\t\t\tonClick={onToggle}\n\t\t\t\tisActive={isActive}\n\t\t\t/>\n\t\t);\n\t},\n};\n\nconst underline = {\n\tname: 'custom-text-formats/underline',\n\ttitle: __('Underline'),\n\ttagName: 'span',\n\ticon: 'editor-underline',\n\tclassName: null,\n\tattributes: {\n\t\tstyle: 'style',\n\t},\n\tedit: (params) => {\n\t\tconst { value, onChange, isActive } = params;\n\t\tconst onToggle = () => {\n\t\t\tonChange(\n\t\t\t\ttoggleFormat(value, {\n\t\t\t\t\ttype: 'custom-text-formats/underline',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tstyle: 'text-decoration: underline;',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<RichTextShortcut\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tcharacter=\"u\"\n\t\t\t\t\tonUse={onToggle}\n\t\t\t\t/>\n\t\t\t\t<RichTextToolbarButton\n\t\t\t\t\ticon=\"editor-underline\"\n\t\t\t\t\ttitle={__('Underline')}\n\t\t\t\t\tonClick={onToggle}\n\t\t\t\t\tisActive={isActive}\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t},\n};\n\nconst formats = [reverseFont, underline];\n\nformats.forEach((format) => {\n\tregisterFormatType(format.name, {\n\t\t...format,\n\t});\n});\n"],"names":["window","name","title","__","tagName","className","attributes","edit","params","value","onChange","isActive","createElement","RichTextToolbarButton","onClick","onToggle","toggleFormat","type","icon","style","Fragment","RichTextShortcut","character","onUse","forEach","format","registerFormatType"],"sourceRoot":""}